on:
  push:
    branches: [ main ]

jobs:
  update:
    runs-on: windows-latest
    name: Build and update version
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Update major build version
        id: bump-major
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "src/Tabletop Soundbar.csproj"
          version: "^.0.0.0"
        if: contains(github.event.head_commit.message, '[RELEASE]')

      - name: Update minor build version
        id: bump-minor
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "src/Tabletop Soundbar.csproj"
          version: "*.^.0.0"
        if: contains(github.event.head_commit.message, '[FEATURE]')

      - name: Update bulid build version
        id: bump-bulid
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "src/Tabletop Soundbar.csproj"
          version: "*.*.^.0"
        if: contains(github.event.head_commit.message, '[FIX]')

      - name: Update revision build version
        id: bump-revision
        uses: vers-one/dotnet-project-version-updater@v1.7
        with:
          file: "src/Tabletop Soundbar.csproj"
          version: "*.*.*.^"
        if: contains(github.event.head_commit.message, '[BUG]')

      - name: Set version env
        id: set-version
        shell: bash
        run: |
          echo "appVersion=${{ steps.bump-major.outputs.newVersion }}${{ steps.bump-minor.outputs.newVersion }}${{ steps.bump-bulid.outputs.newVersion }}${{ steps.bump-revision.outputs.newVersion }}" >> $GITHUB_OUTPUT

      - name: Commit updated version
        if: contains(github.event.head_commit.message, '[BUG]') || contains(github.event.head_commit.message, '[FIX]') || contains(github.event.head_commit.message, '[FEATURE]') || contains(github.event.head_commit.message, '[RELEASE]')
        run: |
          git config user.name "KacperPastusiak"
          git config user.email "pastusiakkacper@gmail.com"
          git add "src/Tabletop Soundbar.csproj"
          git commit -m "Update project versions to ${{ steps.set-version.outputs.appVersion }}"
          git push
